Elip: Nhập/xuất
Thoi: So sánh
Chữ nhật: Tính toán

Phép toán: +, -, *, /, //, %, **
Kiểu dữ liệu: str(xâu ký tự), int(số nguyên), float(số thực), bool(đúng sai)
Phép toán so sánh: <, >, ==, !=, <=, >=
Toán tử logic: and(chỉ đúng khi cả 2 cùng đúng), or(chỉ sai khi cả 2 đều sai), not(phủ định)
In ra màn hình: print() -> str
Nhập vào: input() -> str
Nhập vào số nguyên: int(input())
In ra kiểu dữ liệu: print(type())

            # Câu lệnh điều kiện
    # Dạng thiếu: 
if <điều kiện>:
     <khối lệnh>
    # Dạng đủ: 
if <điều kiện>:
     <khối lệnh 1>
else:
     <khối lệnh 2>
    # Dạng đa nhánh
if <điều kiện 1>:
    <khối lệnh 1>
elif <khối lệnh 2>:
     <khối lệnh 2>
else:
      <khối lệnh 3>

            # Câu lệnh lập hữu hạn
for <i> in range(n):
    <khối lệnh lập>

            # Câu lệnh lập vô hạn
while <điều kiểu>:
      <khối lệnh lập>

Cấu trúc tuần tự: thực hiện từ trên xuống dưới
Cấu trúc rẽ nhánh: if, else, elif
Cấu trúc lập: for, while

Break: thoát khỏi vòng lập

# Cú pháp danh sách
<tên danh sách> = [<giá trị 1, giá trị 2, giá trị 3>..]
<tên danh sách> = [] : danh sách rỗng
for i in range(len()):
    print(a[i])
for i in a -> Từng phần tử
for i in range(len(a)) -> cả dãy số

# Toán tử in
<giá trị> in <tên danh sách> -> giúp chúng ta kiểm tra xem 1 giá trị có đang nằm trong danh sách hay không
# Cú pháp thêm
append()
<tên danh sách>.append(<giá trị phần tử cần thêm vào cuối danh sách>)
insert() -> chèn vào một giá trị mới vị trí chỉ định
<tên danh sách>.insert(<chỉ số>, <giá trị mới>)
Remove: xóa giá trị nào đó ra khỏi danh sách (giá trị nhận là kiểu int, float, str)
<tên danh sách>.remove(<giá trị>)
Pop: chỉ định vị trí phần tử muốn xóa trong danh (giá trị nhận là kiểu int)
<tên danh sách>.pop(<chỉ số>)
Clear: Xóa toàn bộ phần tử trong danh sách
<tên danh sách>.clear()
del() -> xóa toàn bộ danh sách
Index: Cập nhật giá trị trong danh sách
<tên danh sách>[<chỉ số>] = <giá trị mới>
sort(): Sử dụng để sắp xếp danh sách theo thứ tự tăng dần
<tên danh sách>.sort()
<tên danh sách>.sort(reverse = True)
Để nói danh sách các em có thể sử dụng toán tử (+) hoặc lênh extend() để kết hợp danh sách lại với nhau
max() : Tìm số lớn nhất trong danh sách
min() : Tìm số nhỏ nhất trong danh sách
sum() : Tính tổng

<xâu 1> in <xâu 2>
Hàm find(): <xâu mẹ>.find(<xâu con>)
            <xâu mẹ>.find(<xâu con>, <start>, <stop>)
Hàm split(): dùng để tách một xâu thành mảng các ký tự
<xâu>.split(<ký tự tách>)
Hàm replace(): dùng để thay thế tất cả <giá trị cũ> thành <giá trị mới>
<chuỗi>.replace(<giá trị cũ>, <giá trị mới>)

def <Tên hàm> (<tham số>):
    <Khối lệnh>

import math
from math import gcd

class <tên lớp>:
    <mô tả lớp>
<tên lớp>: tên do người dựng đặt thỏa mãn các quy tắc đặt tên của Python
<mô ta lớp>: gồm các biến, hàm mô tả lớp
<tên đối tượng> = <tên lớp>()
<tên đối tượng>, <tên lớp>: tên do người dùng đặt thỏa mãn các quy tắc đặt tên của Python
<tên lớp>: tên của lớp đã được xây dựng sẵn
<đối tượng>.<thuộc tính> = <giá trị mới>
print(<đối tượng>, <thuộc tính>)

class <tên class>:
    ; thuộc tính 1
    ; thuộc tính 2
    ........

    ; thuộc tính n
    def <tên phương thức> (<tham số>(nếu có)):
        <khối lệnh>
        return <giá trị trả về>(nếu có)

<đối tượng>.<phương thức>(<Tham số>)

class <tên_lớp_cha>:
    <Các câu lệnh của lớp cha>
class <tên_lớp_con>(<tên_lớp_cha>):
    <Các câu lệnh của lớp con>

    Cú pháp tạo danh sách đối tượng
<tên danh sách> = [<đối tượng 1>, <đối tượng 2>, ..., <đối tượng n>]